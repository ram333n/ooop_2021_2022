LinkedList         - container, which implemented as a doubly-linked list
ArrayList 	   - container, that encapsulates dynamic size arrays
Insert 		   - operation of adding element to the list
Remove	   	   - operation of deleting element in the list
Front element      - first element in the list
Back element 	   - last element in the list
Iterator 	   - object, that enables to traverse a container and get access to the elements of the list
AdjacencyList 	   - graph, represented as map(vertices) of lists(neighbours of accordant vertex)
AdjacencyMatrix    - graph, represented as matrix.  The elements of the matrix indicate whether pairs of vertices are adjacent or not in the graph.
ArrayListIterator  - iterator for ArrayList
LinkedListIterator - iterator for LinkedList
Node  		   - node of doubly-linked list 
PushBack	   - operation of adding element in back of the list
PushFront	   - operation of adding element in front of the list
PopBack	   	   - operation of deleting back element of the list
PopFront	   - operation of deleting front element of the list
begin()		   - method, which returns an iterator pointing to the front element in the list
end()		   - method, which returns an iterator referring to the past-the-end element in the list
Sentinel	   - node, which points to the first and last elements of the list
Vertex		   - one of the objects that are connected together
Edge		   - one of the connections between the vertices